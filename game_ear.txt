-- 获取服务
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- 获取玩家对象
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- 配置参数
local TARGET_SPEED = 28
local isSpeedBoostEnabled = false

-- 存储当前人类对象和连接
local currentHumanoid = nil
local speedMaintainConnection = nil

-- 创建屏幕GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedBoostGUI"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- 创建主按钮（使用新的颜色方案）
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "SpeedToggle"
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0, 60) -- 放在夜视按钮下方
toggleButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150) -- 关闭状态颜色：灰色
toggleButton.Text = "速度关闭"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 16
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.AutoButtonColor = true
toggleButton.Parent = screenGui

-- 添加圆角
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.2, 0)
corner.Parent = toggleButton

-- 函数：维持速度
local function maintainSpeed()
    if currentHumanoid and currentHumanoid:IsDescendantOf(workspace) then
        currentHumanoid.WalkSpeed = TARGET_SPEED
    end
end

-- 函数：设置速度维持循环
local function setupSpeedMaintenance()
    -- 如果已有连接，先断开
    if speedMaintainConnection then
        speedMaintainConnection:Disconnect()
        speedMaintainConnection = nil
    end
    
    if isSpeedBoostEnabled then
        -- 创建新的循环来维持速度
        speedMaintainConnection = RunService.Heartbeat:Connect(function()
            maintainSpeed()
        end)
    end
end

-- 函数：初始化角色
local function initializeCharacter(character)
    -- 等待人类对象加载
    local humanoid = character:WaitForChild("Humanoid")
    currentHumanoid = humanoid
    
    -- 如果速度提升已启用，立即设置速度
    if isSpeedBoostEnabled then
        maintainSpeed()
        setupSpeedMaintenance()
    end
    
    -- 监听人类对象变化
    humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
        if isSpeedBoostEnabled then
            maintainSpeed()
        end
    end)
end

-- 切换速度提升状态
local function toggleSpeedBoost()
    isSpeedBoostEnabled = not isSpeedBoostEnabled
    
    if isSpeedBoostEnabled then
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0) -- 开启状态颜色：橙色
        toggleButton.Text = "速度开启"
        
        -- 如果角色已存在，启用速度提升
        if player.Character then
            maintainSpeed()
            setupSpeedMaintenance()
        end
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(150, 150, 150) -- 关闭状态颜色：灰色
        toggleButton.Text = "速度关闭"
        
        -- 恢复默认速度
        if currentHumanoid and currentHumanoid:IsDescendantOf(workspace) then
            currentHumanoid.WalkSpeed = 16
        end
        
        -- 断开维持循环
        if speedMaintainConnection then
            speedMaintainConnection:Disconnect()
            speedMaintainConnection = nil
        end
    end
end

-- 绑定按钮点击事件
toggleButton.MouseButton1Click:Connect(toggleSpeedBoost)

-- 当角色加载时初始化
if player.Character then
    initializeCharacter(player.Character)
end

-- 当角色重新生成时重新初始化
player.CharacterAdded:Connect(initializeCharacter)

-- 当角色移除时清理
player.CharacterRemoving:Connect(function()
    if speedMaintainConnection then
        speedMaintainConnection:Disconnect()
        speedMaintainConnection = nil
    end
    currentHumanoid = nil
end)

print("玩家速度控制系统已加载，使用屏幕按钮控制速度提升")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- 保存原始设置
local originalBrightness = Lighting.Brightness
local originalExposureCompensation = Lighting.ExposureCompensation
local originalClockTime = Lighting.ClockTime
local originalFogEnd = Lighting.FogEnd

-- 夜视状态变量
local nightVisionEnabled = true
local nightVisionConnection

-- 创建适度亮度增强效果
local function enableNightVision()
    -- 适度提高亮度和曝光度
    Lighting.Brightness = 1.8  -- 适度提高整体亮度
    Lighting.ExposureCompensation = 1.4  -- 再次微调曝光补偿（从1.45降低到1.4）
    
    -- 强制设置为白天时间
    Lighting.ClockTime = 12  -- 中午12点，适中的日照时间
    
    -- 适度增加雾效距离
    if Lighting.FogEnd < 5000 then
        Lighting.FogEnd = 5000  -- 适度增加雾效结束距离
    end
    
    -- 添加轻微的Bloom效果
    if not Lighting:FindFirstChild("NightVisionBloom") then
        local bloom = Instance.new("BloomEffect")
        bloom.Name = "NightVisionBloom"
        bloom.Intensity = 0.1   -- 轻微光晕效果
        bloom.Threshold = 0.85  -- 提高阈值，减少光晕范围
        bloom.Size = 16         -- 适中的光晕尺寸
        bloom.Parent = Lighting
    end
    
    -- 添加轻微的颜色校正效果
    if not Lighting:FindFirstChild("NightVisionColorCorrection") then
        local colorCorrection = Instance.new("ColorCorrectionEffect")
        colorCorrection.Name = "NightVisionColorCorrection"
        colorCorrection.Brightness = 0.12  -- 轻微提高亮度
        colorCorrection.Contrast = 0.2     -- 适度增强对比度
        colorCorrection.Saturation = 0     -- 完全保持原始颜色
        colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)  -- 纯白色，不改变色调
        colorCorrection.Parent = Lighting
    end
    
    -- 启动更新循环
    if nightVisionConnection then
        nightVisionConnection:Disconnect()
    end
    
    nightVisionConnection = RunService.RenderStepped:Connect(function()
        -- 确保亮度和曝光设置不会被其他脚本覆盖
        if Lighting.Brightness < 1.6 then
            Lighting.Brightness = 1.8
        end
        
        if Lighting.ExposureCompensation < 1.3 then
            Lighting.ExposureCompensation = 1.4  -- 确保曝光补偿保持在1.4
        end
        
        -- 确保时间保持在白天
        if Lighting.ClockTime < 8 or Lighting.ClockTime > 16 then
            Lighting.ClockTime = 12  -- 中午12点
        end
        
        -- 确保雾效距离足够远
        if Lighting.FogEnd < 5000 then
            Lighting.FogEnd = 5000
        end
        
        -- 确保Bloom效果存在
        if not Lighting:FindFirstChild("NightVisionBloom") then
            local bloom = Instance.new("BloomEffect")
            bloom.Name = "NightVisionBloom"
            bloom.Intensity = 0.1
            bloom.Threshold = 0.85
            bloom.Size = 16
            bloom.Parent = Lighting
        end
        
        -- 确保颜色校正效果存在
        if not Lighting:FindFirstChild("NightVisionColorCorrection") then
            local colorCorrection = Instance.new("ColorCorrectionEffect")
            colorCorrection.Name = "NightVisionColorCorrection"
            colorCorrection.Brightness = 0.12
            colorCorrection.Contrast = 0.2
            colorCorrection.Saturation = 0
            colorCorrection.TintColor = Color3.fromRGB(255, 255, 255)
            colorCorrection.Parent = Lighting
        end
    end)
end

-- 清理函数
local function disableNightVision()
    if nightVisionConnection then
        nightVisionConnection:Disconnect()
        nightVisionConnection = nil
    end
    
    -- 恢复原始设置
    Lighting.Brightness = originalBrightness
    Lighting.ExposureCompensation = originalExposureCompensation
    Lighting.ClockTime = originalClockTime
    Lighting.FogEnd = originalFogEnd
    
    -- 移除添加的效果
    local bloom = Lighting:FindFirstChild("NightVisionBloom")
    if bloom then
        bloom:Destroy()
    end
    
    local colorCorrection = Lighting:FindFirstChild("NightVisionColorCorrection")
    if colorCorrection then
        colorCorrection:Destroy()
    end
end

-- 夜视切换函数
local function toggleNightVision()
    nightVisionEnabled = not nightVisionEnabled
    
    if nightVisionEnabled then
        enableNightVision()
        print("夜视功能已启用")
    else
        disableNightVision()
        print("夜视功能已禁用")
    end
    
    return nightVisionEnabled
end

-- 游戏关闭时自动清理
game:GetService("Players").LocalPlayer:GetPropertyChangedSignal("Parent"):Connect(function()
    if not game:GetService("Players").LocalPlayer.Parent then
        disableNightVision()
    end
end)

-- 默认启用夜视
enableNightVision()
print("夜视功能已默认启用")

-- 创建简单的夜视切换按钮
local function createNightVisionToggle()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "NightVisionToggleGUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "NightVisionToggle"
    toggleButton.Size = UDim2.new(0, 120, 0, 40)
    toggleButton.Position = UDim2.new(0, 10, 0, 10)
    toggleButton.BackgroundColor3 = Color3.fromRGB(50, 200, 200)
    toggleButton.Text = "夜视开启"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = 16
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.AutoButtonColor = true
    
    -- 圆角
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0.2, 0)
    corner.Parent = toggleButton
    
    toggleButton.MouseButton1Click:Connect(function()
        local newState = toggleNightVision()
        toggleButton.BackgroundColor3 = newState and Color3.fromRGB(50, 200, 200) or Color3.fromRGB(100, 100, 150)
        toggleButton.Text = newState and "夜视开启" or "夜视关闭"
    end)
    
    toggleButton.Parent = screenGui
    return screenGui
end

-- 创建夜视切换按钮
createNightVisionToggle()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- ===== 敌人ESP配置 =====
local ENEMY_SETTINGS = {
    ENEMY_TAGS = {"Rake", "CS78chen", "qiaoyanbo12"}, -- 敌人标签
    ENEMY_COLOR = Color3.fromRGB(255, 50, 50), -- 敌人高亮颜色
    ENEMY_TRACER_COLOR = Color3.fromRGB(255, 50, 50), -- 敌人追踪线颜色
    SHOW_HEALTH = true, -- 显示血量
    SHOW_DISTANCE = true, -- 显示距离
    SHOW_TRACER = true, -- 显示追踪线
    TRACER_THICKNESS = 0.1, -- 追踪线粗细
    MAX_DISTANCE = 1000, -- 最大显示距离
    HEALTH_TEXT_SIZE = 16, -- 血量文字大小
    DISTANCE_TEXT_SIZE = 14, -- 距离文字大小
    NAME_TEXT_SIZE = 18, -- 名称文字大小
    UPDATE_RATE = 0.1, -- 更新频率
    SCAN_INTERVAL = 5, -- 扫描间隔
    HIGHLIGHT_DISABLE_DISTANCE = 7 -- 高亮禁用距离
}

-- 敌人ESP状态
local enemyEspEnabled = true
local espCache = {}
local lastScanTime = 0
local lastUpdate = 0

-- 判断是否为敌人
local function isEnemy(target)
    if not target or not target.Parent then return false end
    
    for _, tag in ipairs(ENEMY_SETTINGS.ENEMY_TAGS) do
        if target.Name:find(tag) or target:FindFirstChild(tag) then
            return true
        end
    end
    
    return false
end

-- 创建敌人ESP
local function createEnemyESP(target)
    if not target or not target:FindFirstChild("HumanoidRootPart") then return end
    if espCache[target] then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "EnemyESP_Highlight"
    highlight.FillColor = ENEMY_SETTINGS.ENEMY_COLOR
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.3
    highlight.OutlineTransparency = 0
    highlight.Parent = target
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "EnemyESP_Billboard"
    billboard.Adornee = target.HumanoidRootPart
    billboard.Size = UDim2.new(0, 150, 0, 60)
    billboard.StudsOffset = Vector3.new(0, 3.5, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = target
    
    local distanceText = Instance.new("TextLabel")
    distanceText.Name = "ESP_Distance"
    distanceText.Size = UDim2.new(1, 0, 0.3, 0)
    distanceText.Position = UDim2.new(0, 0, 0, 0)
    distanceText.BackgroundTransparency = 1
    distanceText.TextColor3 = Color3.fromRGB(200, 200, 255)
    distanceText.TextStrokeTransparency = 0.5
    distanceText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    distanceText.TextSize = ENEMY_SETTINGS.DISTANCE_TEXT_SIZE
    distanceText.Font = Enum.Font.SourceSansBold
    distanceText.TextXAlignment = Enum.TextXAlignment.Center
    distanceText.Parent = billboard
    
    local healthText = Instance.new("TextLabel")
    healthText.Name = "ESP_Health"
    healthText.Size = UDim2.new(1, 0, 0.4, 0)
    healthText.Position = UDim2.new(0, 0, 0.3, 0)
    healthText.BackgroundTransparency = 1
    healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
    healthText.TextStrokeTransparency = 0.5
    healthText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    healthText.TextSize = ENEMY_SETTINGS.HEALTH_TEXT_SIZE
    healthText.Font = Enum.Font.SourceSansBold
    healthText.TextXAlignment = Enum.TextXAlignment.Center
    healthText.Parent = billboard
    
    local nameText = Instance.new("TextLabel")
    nameText.Name = "ESP_Name"
    nameText.Size = UDim2.new(1, 0, 0.3, 0)
    nameText.Position = UDim2.new(0, 0, 0.7, 0)
    nameText.BackgroundTransparency = 1
    nameText.TextColor3 = ENEMY_SETTINGS.ENEMY_COLOR
    nameText.TextStrokeTransparency = 0.5
    nameText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameText.TextSize = ENEMY_SETTINGS.NAME_TEXT_SIZE
    nameText.Font = Enum.Font.SourceSansBold
    nameText.TextXAlignment = Enum.TextXAlignment.Center
    nameText.Parent = billboard
    
    local tracer
    if ENEMY_SETTINGS.SHOW_TRACER then
        local startAttachment = Instance.new("Attachment")
        startAttachment.Name = "TracerStart"
        startAttachment.Parent = workspace.CurrentCamera
        
        local endAttachment = Instance.new("Attachment")
        endAttachment.Name = "TracerEnd"
        endAttachment.Parent = target.HumanoidRootPart
        
        tracer = Instance.new("Beam")
        tracer.Name = "ESP_Tracer"
        tracer.Attachment0 = startAttachment
        tracer.Attachment1 = endAttachment
        tracer.Color = ColorSequence.new(ENEMY_SETTINGS.ENEMY_TRACER_COLOR)
        tracer.Width0 = ENEMY_SETTINGS.TRACER_THICKNESS
        tracer.Width1 = ENEMY_SETTINGS.TRACER_THICKNESS * 0.8
        tracer.LightEmission = 0.8
        tracer.Transparency = NumberSequence.new(0.5)
        tracer.FaceCamera = true
        tracer.Parent = target.HumanoidRootPart
    end
    
    espCache[target] = {
        highlight = highlight,
        billboard = billboard,
        tracer = tracer,
        humanoid = target:FindFirstChildOfClass("Humanoid"),
        rootPart = target.HumanoidRootPart,
        startAttachment = tracer and tracer.Attachment0,
        endAttachment = tracer and tracer.Attachment1
    }
end

-- 扫描敌人
local function scanForEnemies()
    for _, descendant in ipairs(workspace:GetDescendants()) do
        if descendant:IsA("Model") and descendant:FindFirstChild("HumanoidRootPart") then
            if isEnemy(descendant) then
                createEnemyESP(descendant)
            end
        end
    end
end

-- 清理已不存在的敌人
local function cleanupESP()
    for target, data in pairs(espCache) do
        if not target.Parent then
            if data.highlight then data.highlight:Destroy() end
            if data.billboard then data.billboard:Destroy() end
            if data.tracer then data.tracer:Destroy() end
            espCache[target] = nil
        end
    end
end

-- 更新敌人ESP
local function updateEnemyESP()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then return end
    local localRoot = LocalPlayer.Character.HumanoidRootPart
    
    for target, data in pairs(espCache) do
        if target.Parent then
            local distance = (data.rootPart.Position - localRoot.Position).Magnitude
            local distanceInMeters = distance / 3.571
            local shouldShow = enemyEspEnabled and distance <= ENEMY_SETTINGS.MAX_DISTANCE
            
            data.billboard.Enabled = shouldShow
            if data.tracer then
                data.tracer.Enabled = shouldShow
                if data.startAttachment then
                    data.startAttachment.WorldPosition = localRoot.Position - Vector3.new(0, 1.5, 0)
                end
            end
            
            if shouldShow then
                -- 距离小于配置值时关闭高亮
                if distanceInMeters < ENEMY_SETTINGS.HIGHLIGHT_DISABLE_DISTANCE then
                    data.highlight.Enabled = false
                else
                    data.highlight.Enabled = true
                end
                
                -- 更新文本信息
                if ENEMY_SETTINGS.SHOW_DISTANCE then
                    data.billboard.ESP_Distance.Text = string.format("%.1fm", distanceInMeters)
                else
                    data.billboard.ESP_Distance.Text = ""
                end
                
                if ENEMY_SETTINGS.SHOW_HEALTH and data.humanoid then
                    data.billboard.ESP_Health.Text = string.format("HP: %d/%d", 
                        math.floor(data.humanoid.Health), 
                        math.floor(data.humanoid.MaxHealth))
                else
                    data.billboard.ESP_Health.Text = ""
                end
                
                data.billboard.ESP_Name.Text = target.Name
            else
                data.highlight.Enabled = false
            end
        end
    end
end

-- 主循环
RunService.Heartbeat:Connect(function(deltaTime)
    lastUpdate = lastUpdate + deltaTime
    lastScanTime = lastScanTime + deltaTime
    
    -- 定期扫描敌人
    if lastScanTime >= ENEMY_SETTINGS.SCAN_INTERVAL then
        lastScanTime = 0
        scanForEnemies()
    end
    
    -- 定期更新
    if lastUpdate >= ENEMY_SETTINGS.UPDATE_RATE then
        lastUpdate = 0
        cleanupESP()
        updateEnemyESP()
    end
end)

-- 监听新添加的敌人
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Model") and descendant:FindFirstChild("HumanoidRootPart") then
        if isEnemy(descendant) then
            createEnemyESP(descendant)
        end
    end
end)

-- 初始扫描
scanForEnemies()

-- 添加键盘快捷键控制
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F5 then
        enemyEspEnabled = not enemyEspEnabled
        print("敌人ESP " .. (enemyEspEnabled and "开启" or "关闭"))
    end
end)

print("敌人ESP已加载")
print("按 F5 键切换敌人ESP的开启/关闭状态")
-- 高级枪械透视脚本
-- 支持全图扫描、距离显示和文字标签

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local GuiService = game:GetService("GuiService")

-- 配置参数
local config = {
    maxDistance = 2000, -- 最大检测距离(stud)
    highlightColor = Color3.fromRGB(65, 105, 225), -- 高亮颜色(改为蓝色系)
    highlightTransparency = 0.3, -- 透明度
    scanInterval = 1, -- 全图扫描间隔(秒)
    updateInterval = 0.1, -- 更新间隔(秒)
    labelColor = Color3.fromRGB(135, 206, 250), -- 标签颜色(改为淡蓝色)
    labelSize = 15, -- 标签字体大小
    maxLabels = 50, -- 最大显示标签数量
    tagPrefix = "[枪]", -- 标签前缀改为"枪"
    scanKey = Enum.KeyCode.T, -- 全图扫描快捷键
    notificationDuration = 3, -- 提示显示时间(秒)
    notificationColor = Color3.fromRGB(30, 144, 255) -- 深蓝色提示
}

-- 本地变量
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = workspace.CurrentCamera

-- 存储已高亮的枪械
local highlightedItems = {}
local itemCache = {}
local lastScanTime = 0
local scanning = false
local lastNotificationTime = 0
local notificationGui = nil

-- 创建提示GUI
local function createNotificationGui()
    if notificationGui then
        notificationGui:Destroy()
    end
    
    notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "GunNotifications"
    notificationGui.Parent = player.PlayerGui
    notificationGui.ResetOnSpawn = false
    notificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    return notificationGui
end

-- 显示刷新提示
local function showRefreshNotification()
    local currentTime = os.clock()
    if currentTime - lastNotificationTime < config.notificationDuration then
        return -- 防止重复显示
    end
    
    lastNotificationTime = currentTime
    
    local gui = createNotificationGui()
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0.4, 0, 0.08, 0)
    frame.Position = UDim2.new(0.3, 0, 0.05, 0)
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.BorderSizePixel = 0
    frame.Parent = gui
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = "已刷新枪械"
    textLabel.TextColor3 = config.notificationColor
    textLabel.TextSize = 24
    textLabel.Font = Enum.Font.SourceSansBold
    textLabel.TextStrokeTransparency = 0.5
    textLabel.TextStrokeColor3 = Color3.new(1, 1, 1)
    textLabel.Parent = frame
    
    -- 淡入效果
    frame.BackgroundTransparency = 1
    textLabel.TextTransparency = 1
    
    local fadeIn = TweenService:Create(
        frame,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {BackgroundTransparency = 0.5}
    )
    
    local textFadeIn = TweenService:Create(
        textLabel,
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        {TextTransparency = 0}
    )
    
    fadeIn:Play()
    textFadeIn:Play()
    
    -- 延迟后淡出
    task.delay(config.notificationDuration, function()
        if frame and frame.Parent then
            local fadeOut = TweenService:Create(
                frame,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {BackgroundTransparency = 1}
            )
            
            local textFadeOut = TweenService:Create(
                textLabel,
                TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                {TextTransparency = 1}
            )
            
            fadeOut:Play()
            textFadeOut:Play()
            
            fadeOut.Completed:Connect(function()
                if frame and frame.Parent then
                    frame:Destroy()
                end
            end)
        end
    end)
end

-- 转换stud为米的函数
local function studsToMeters(studs)
    return studs / 3.571
end

-- 创建标签函数
local function createLabel(itemPart, distanceInStuds)
    if not itemPart:FindFirstChild("GunLabel") then
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "GunLabel"
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 200, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.Adornee = itemPart
        billboard.MaxDistance = config.maxDistance
        
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = string.format("%s\n%.1f米", config.tagPrefix, studsToMeters(distanceInStuds))
        textLabel.TextColor3 = config.labelColor
        textLabel.TextSize = config.labelSize
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.TextStrokeTransparency = 0.5
        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        
        textLabel.Parent = billboard
        billboard.Parent = itemPart
        
        return billboard
    end
    return itemPart:FindFirstChild("GunLabel")
end

-- 更新标签距离
local function updateLabel(itemPart, distanceInStuds)
    local label = itemPart:FindFirstChild("GunLabel")
    if label then
        label.TextLabel.Text = string.format("%s\n%.1f米", config.tagPrefix, studsToMeters(distanceInStuds))
        
        -- 根据距离调整标签大小
        local scale = math.clamp(1 - (distanceInStuds / config.maxDistance) * 0.5, 0.5, 1)
        label.TextLabel.TextSize = config.labelSize * scale
    end
end

-- 高亮枪械的函数
local function highlightItem(itemPart)
    if not highlightedItems[itemPart] then
        local highlight = Instance.new("Highlight")
        highlight.Name = "GunHighlight"
        highlight.FillColor = config.highlightColor
        highlight.FillTransparency = config.highlightTransparency
        highlight.OutlineColor = config.highlightColor
        highlight.OutlineTransparency = 0
        highlight.Adornee = itemPart
        highlight.Parent = itemPart
        
        highlightedItems[itemPart] = highlight
    end
end

-- 全图扫描枪械
local function fullScan()
    if scanning then return end
    scanning = true
    
    local startTime = os.clock()
    local previousCount = #itemCache
    itemCache = {}
    
    -- 搜索枪械相关对象
    local gunKeywords = {"gun", "pistol", "rifle", "shotgun", "sniper", "revolver", "ak", "m4", "ar", "smg", "lmg", "武器", "枪"}
    
    -- 扫描工作区
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            local lowerName = obj.Name:lower()
            for _, keyword in ipairs(gunKeywords) do
                if lowerName:find(keyword) then
                    table.insert(itemCache, obj)
                    break
                end
            end
        end
    end
    
    -- 扫描模型
    for _, model in ipairs(workspace:GetChildren()) do
        if model:IsA("Model") then
            local lowerName = model.Name:lower()
            for _, keyword in ipairs(gunKeywords) do
                if lowerName:find(keyword) then
                    for _, part in ipairs(model:GetDescendants()) do
                        if part:IsA("BasePart") then
                            table.insert(itemCache, part)
                        end
                    end
                    break
                end
            end
        end
    end
    
    scanning = false
    lastScanTime = os.clock()
    
    local newCount = #itemCache
    print(string.format("全图扫描完成，找到 %d 个枪械相关物品，耗时 %.2f 秒", newCount, os.clock() - startTime))
    
    -- 如果检测到枪械且数量有变化，显示提示
    if newCount > 0 and newCount ~= previousCount then
        showRefreshNotification()
    end
end

-- 清除不再需要的枪械高亮
local function cleanUpHighlights(currentItems)
    for itemPart, highlight in pairs(highlightedItems) do
        if not table.find(currentItems, itemPart) then
            if highlight then highlight:Destroy() end
            local label = itemPart:FindFirstChild("GunLabel")
            if label then label:Destroy() end
            highlightedItems[itemPart] = nil
        end
    end
end

-- 更新附近的枪械显示
local function updateNearbyItems()
    if not humanoidRootPart or not humanoidRootPart:IsDescendantOf(workspace) then
        return
    end
    
    local currentTime = os.clock()
    if currentTime - lastScanTime > config.scanInterval then
        task.spawn(fullScan)
    end
    
    local nearbyItems = {}
    local playerPos = humanoidRootPart.Position
    
    -- 按距离排序
    table.sort(itemCache, function(a, b)
        return (playerPos - a.Position).Magnitude < (playerPos - b.Position).Magnitude
    end)
    
    -- 只显示最近的maxLabels个枪械
    local displayCount = 0
    for _, itemPart in ipairs(itemCache) do
        if displayCount >= config.maxLabels then break end
        
        local distance = (playerPos - itemPart.Position).Magnitude
        if distance <= config.maxDistance then
            table.insert(nearbyItems, itemPart)
            highlightItem(itemPart)
            local label = createLabel(itemPart, distance)
            updateLabel(itemPart, distance)
            displayCount += 1
        end
    end
    
    cleanUpHighlights(nearbyItems)
end

-- 设置快捷键
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == config.scanKey then
        fullScan()
    end
end)

-- 主循环
RunService.Heartbeat:Connect(function()
    updateNearbyItems()
end)

-- 玩家重生时重新获取角色
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoidRootPart = newChar:WaitForChild("HumanoidRootPart")
    
    -- 重新创建提示GUI
    createNotificationGui()
end)

-- 初始创建提示GUI
createNotificationGui()

-- 初始扫描
task.spawn(fullScan)

print("高级枪械透视脚本已激活")
print(string.format("按 %s 键手动触发全图扫描", config.scanKey.Name))